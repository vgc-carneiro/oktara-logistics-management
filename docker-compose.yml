version: '3.7'
services:
  postgres:
    container_name: logistics-manager-postgres
    build:
      context: ./api/.postgres
      dockerfile: Dockerfile
    shm_size: 4g
    ports:
      - 5436:5432
    volumes:
      - './api/.postgres/data:/var/lib/postgresql/data:rw'
    environment:
      - POSTGRES_DB=logistics
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
      - PGDATA=/var/lib/postgresql/data
      - POSTGRES_HOST_AUTH_METHOD=trust

  app:
    build: ./api/
    image: api-logistics-manager
    container_name: api-logistics-manager
    hostname: localhost
    links:
      - postgres
    environment:
      - NODE_ENV=development
      - DATABASE_HOST=logistics-manager-postgres
      - DATABASE_PORT=5432
      - DATABASE_DATABASE=logistics
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=admin
      - DATABASE_SCHEMA=public
      - MIGRATION_PATH=./dist/infrastructure/migrations/*.js
      - MIGRATION_TABLE=migrations
      - PATH_ENTITIES=./../**/*.entity.js
      - ENABLE_SEED=true
    command: npm run start:prod:migration
    ports:
      - 3335:3335

  web:
    build: ./web-logistics/
    image: web-logistics
    container_name: logistics-manager
    hostname: localhost
    links:
      - app
    environment:
      - REACT_APP_BASE_URL=http://localhost:3335/api/
    command: npm start
    ports:
      - 3000:3000